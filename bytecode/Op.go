// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package bytecode

import "strconv"

type Op byte

const (
	OpNONE         Op = 0
	OpOpPushStr    Op = 1
	OpOpPushInt    Op = 2
	OpOpPushTrue   Op = 3
	OpOpPushFalse  Op = 4
	OpOpPushVector Op = 5
	OpOpInvoke     Op = 6
	OpOpAdd        Op = 7
	OpOpSub        Op = 8
	OpOpMul        Op = 9
	OpOpDiv        Op = 10
)

var EnumNamesOp = map[Op]string{
	OpNONE:         "NONE",
	OpOpPushStr:    "OpPushStr",
	OpOpPushInt:    "OpPushInt",
	OpOpPushTrue:   "OpPushTrue",
	OpOpPushFalse:  "OpPushFalse",
	OpOpPushVector: "OpPushVector",
	OpOpInvoke:     "OpInvoke",
	OpOpAdd:        "OpAdd",
	OpOpSub:        "OpSub",
	OpOpMul:        "OpMul",
	OpOpDiv:        "OpDiv",
}

var EnumValuesOp = map[string]Op{
	"NONE":         OpNONE,
	"OpPushStr":    OpOpPushStr,
	"OpPushInt":    OpOpPushInt,
	"OpPushTrue":   OpOpPushTrue,
	"OpPushFalse":  OpOpPushFalse,
	"OpPushVector": OpOpPushVector,
	"OpInvoke":     OpOpInvoke,
	"OpAdd":        OpOpAdd,
	"OpSub":        OpOpSub,
	"OpMul":        OpOpMul,
	"OpDiv":        OpOpDiv,
}

func (v Op) String() string {
	if s, ok := EnumNamesOp[v]; ok {
		return s
	}
	return "Op(" + strconv.FormatInt(int64(v), 10) + ")"
}
