// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package bytecode

import "strconv"

type Op byte

const (
	OpNONE         Op = 0
	OpOpPushStr    Op = 1
	OpOpPushInt    Op = 2
	OpOpPushBool   Op = 3
	OpOpPushVector Op = 4
	OpOpSysCall    Op = 5
	OpOpRet        Op = 6
)

var EnumNamesOp = map[Op]string{
	OpNONE:         "NONE",
	OpOpPushStr:    "OpPushStr",
	OpOpPushInt:    "OpPushInt",
	OpOpPushBool:   "OpPushBool",
	OpOpPushVector: "OpPushVector",
	OpOpSysCall:    "OpSysCall",
	OpOpRet:        "OpRet",
}

var EnumValuesOp = map[string]Op{
	"NONE":         OpNONE,
	"OpPushStr":    OpOpPushStr,
	"OpPushInt":    OpOpPushInt,
	"OpPushBool":   OpOpPushBool,
	"OpPushVector": OpOpPushVector,
	"OpSysCall":    OpOpSysCall,
	"OpRet":        OpOpRet,
}

func (v Op) String() string {
	if s, ok := EnumNamesOp[v]; ok {
		return s
	}
	return "Op(" + strconv.FormatInt(int64(v), 10) + ")"
}
